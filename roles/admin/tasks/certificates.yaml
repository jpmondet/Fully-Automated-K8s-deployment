---
- name: Preparing certificates files
  template:
    src: "{{ item }}"
    dest: "/tmp/{{ item }}"
  with_items:
    - ca-csr.j2
    - admin-csr.j2
    - kube-proxy-csr.j2
    - kubernetes-csr.j2

- name: Preparing certificates files of minions
  template:
    vars: 
      worker_node: "{{ item }}"
    src: "node-csr.j2"
    dest: "/tmp/{{ item }}-csr.json"
  with_items: groups.workers

- name: Generating CA, Admin & kubeproxy certificates with cfssl
  shell: "{{ item }}"
  with_items:
    - "cfssl_linux-amd64 gencert -initca /tmp/ca-csr.json | cfssljson_linux-amd64 -bare /tmp/ca"
    - "cfssl_linux-amd64 gencert -ca=/tmp/ca.pem -ca-key=/tmp/ca-key.pem -config=/tmp/ca-config.json -profile=kubernetes /tmp/admin-csr.json | cfssljson_linux-amd64 -bare /tmp/admin"
    - "cfssl_linux-amd64 gencert -ca=/tmp/ca.pem -ca-key=/tmp/ca-key.pem -config=/tmp/ca-config.json -profile=kubernetes /tmp/kube-proxy-csr.json | cfssljson_linux-amd64 -bare /tmp/kube-proxy"

- name: Generating Workers certificates with cfssl
  shell: "cfssl_linux-amd64 gencert -ca=/tmp/ca.pem -ca-key=/tmp/ca-key.pem -config=/tmp/ca-config.json -hostname={{ item.name }},{{ item.ext_ip }},{{ item.int_ip }} -profile=kubernetes /tmp/{{ item.name }}-csr.json | cfssljson_linux-amd64 -bare /tmp/{{ item.name }}"
  with_items:
    - "{{ groups.workers }}"

- name: Generating Masters certificates with cfssl
  shell: "cfssl_linux-amd64 gencert -ca=/tmp/ca.pem -ca-key=/tmp/ca-key.pem -config=/tmp/ca-config.json -hostname={{ item.ext_ip }},{{ item.int_ip }},127.0.0.1,kubernetes.default -profile=kubernetes /tmp/kubernetes-csr.json | cfssljson_linux-amd64 -bare /tmp/kubernetes"
  with_items:
    - "{{ groups.masters }}"
