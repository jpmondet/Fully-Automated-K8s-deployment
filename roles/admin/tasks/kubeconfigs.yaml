---
- name: Generating Workers/kube-proxy config files, part 1
  shell: "kubectl config set-cluster {{ cluster_name }} --certificate-authority=/tmp/ca.pem --embed-certs=true --server=https://{{ master_ip }}:6443 --kubeconfig=/tmp/{{ item }}.kubeconfig"
  with_items:
    - "{{ groups.workers }}"
    - kube-proxy

- name: Generating Workers/kube-proxy config files, part 2
  shell: "kubectl config set-credentials system:node:{{ item }} --client-certificate==/tmp/{{ item }}.pem ---client-key={{ item }}-key.pem --embed-certs=true --kubeconfig=/tmp/{{ item }}.kubeconfig"
  with_items:
    - "{{ groups.workers }}"
    - kube-proxy

- name: Generating Workers config files, part 3
  shell: "kubectl config set-context default --cluster={{ cluster_name }} --user=system:node:{{ item }} --kubeconfig=/tmp/{{ item }}.kubeconfig"
  with_items:
    - "{{ groups.workers }}"

- name: Generating Workers config files, part 3
  shell: "kubectl config set-context default --cluster={{ cluster_name }} --user={{ item }} --kubeconfig=/tmp/{{ item }}.kubeconfig"
  with_items:
    - kube-proxy

- name: Generating Workers/kube-proxy config files, part 4
  shell: "kubectl config use-context default --kubeconfig=/tmp/{{ item }}.kubeconfig"
  with_items:
    - "{{ groups.workers }}"
    - kube-proxy

- name: Encryption key for encryption-config
  shell: "head -c 32 /dev/urandom | base64"
  register: encryption_output

- name: Generating encryption-config file 
  template:
    vars: 
      encryption_key: encryption_output.stdout[0]
    src: "/tmp/encryption-config.j2"
    dest: "/tmp/encryption-config.yaml"

- name: Generating etcd.service file 
  template:
    vars: 
      encryption_key: encryption_output.stdout[0]
    src: "/tmp/encryption-config.j2"
    dest: "/tmp/encryption-config.yaml"

