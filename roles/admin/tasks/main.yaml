---
- name: Get prequisites
  get_url:
    url: "{{ item }}"
    dest: /tmp/
  with_items: 
    - "https://pkg.cfssl.org/R1.2/cfssl_linux-amd64"
    - "https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64"
    - "https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kubectl"
    - "https://github.com/coreos/etcd/releases/download/v3.2.11/etcd-v3.2.11-linux-amd64.tar.gz"
    - "https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kube-apiserver"
    - "https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kube-controller-manager"
    - "https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kube-scheduler"
    - "https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz"
    - "https://github.com/kubernetes-incubator/cri-containerd/releases/download/v1.0.0-beta.0/cri-containerd-1.0.0-beta.0.linux-amd64.tar.gz"
    - "https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kube-proxy"


- name: Extracting archives
  unarchive:
    src: "/tmp/{{ item }}"
    dest: /tmp/
  with_fileglob: /tmp/*gz

- name: Giving rights to execute files
  file:
    path: "/tmp/{{ item }}"
    mode: "u+x"
  with_items: 
    - cfssl_linux-amd64
    - cfssljson_linux-amd64
    - kubectl
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler

- name: Copying admin files to bin
  copy:
    src: "/tmp/{{ item }}"
    dest: /usr/local/bin/
  with_items:
    - kubectl
    - cfssl_linux-amd64
    - cfssljson_linux-amd64

- name: Install Rsync to copy large files on the right targets
  apt:
    name: rsync

- name: Preparing certificates files
  template:
    src: "{{ item }}"
    dest: "/tmp/{{ item }}"
  with_items:
    - ca-csr.j2
    - admin-csr.j2
    - kube-proxy-csr.j2
    - kubernetes-csr.j2

- name: Preparing certificates files of minions
  template:
    vars: 
      worker_node: "{{ item }}"
    src: "node-csr.j2"
    dest: "/tmp/{{ item }}-csr.json"
  with_items: groups.workers

- name: Generating CA, Admin & kubeproxy certificates with cfssl
  shell: "{{ item }}"
  with_items:
    - "cfssl_linux-amd64 gencert -initca /tmp/ca-csr.json | cfssljson_linux-amd64 -bare /tmp/ca"
    - "cfssl_linux-amd64 gencert -ca=/tmp/ca.pem -ca-key=/tmp/ca-key.pem -config=/tmp/ca-config.json -profile=kubernetes /tmp/admin-csr.json | cfssljson_linux-amd64 -bare /tmp/admin"
    - "cfssl_linux-amd64 gencert -ca=/tmp/ca.pem -ca-key=/tmp/ca-key.pem -config=/tmp/ca-config.json -profile=kubernetes /tmp/kube-proxy-csr.json | cfssljson_linux-amd64 -bare /tmp/kube-proxy"

- name: Generating Workers certificates with cfssl
  shell: "cfssl_linux-amd64 gencert -ca=/tmp/ca.pem -ca-key=/tmp/ca-key.pem -config=/tmp/ca-config.json -hostname={{ item.name }},{{ item.ext_ip }},{{ item.int_ip }} -profile=kubernetes /tmp/{{ item.name }}-csr.json | cfssljson_linux-amd64 -bare /tmp/{{ item.name }}"
  with_items:
    - "{{ groups.workers }}"

- name: Generating Masters certificates with cfssl
  shell: "cfssl_linux-amd64 gencert -ca=/tmp/ca.pem -ca-key=/tmp/ca-key.pem -config=/tmp/ca-config.json -hostname={{ item.ext_ip }},{{ item.int_ip }},127.0.0.1,kubernetes.default -profile=kubernetes /tmp/kubernetes-csr.json | cfssljson_linux-amd64 -bare /tmp/kubernetes"
  with_items:
    - "{{ groups.masters }}"

- name: Generating Workers config files, part 1
  shell: "kubectl config set-cluster {{ cluster_name }} --certificate-authority=/tmp/ca.pem --embed-certs=true --server=https://{{ master_ip }}:6443 --kubeconfig=/tmp/{{ item }}.kubeconfig"
  with_items:
    - "{{ groups.workers }}"

- name: Generating Workers config files, part 2
  shell: "kubectl config set-credentials system:node:{{ item }} --client-certificate==/tmp/{{ item }}.pem ---client-key={{ item }}-key.pem --embed-certs=true --kubeconfig=/tmp/{{ item }}.kubeconfig"
  with_items:
    - "{{ groups.workers }}"

- name: Generating Workers config files, part 3
  shell: "kubectl config set-context default --cluster={{ cluster_name }} --user=system:node:{{ item }} --kubeconfig=/tmp/{{ item }}.kubeconfig"
  with_items:
    - "{{ groups.workers }}"